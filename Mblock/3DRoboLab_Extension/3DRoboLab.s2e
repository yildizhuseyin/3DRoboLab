{	"extensionName": "3DRoboLab",
"description": "Basic Operations with Arduino / Arduino ile basit işlemler",
	"version": "1.0.2",
	"author": "Hüseyin YILDIZ (yildizhuseyin@gmail.com)",
	"homepage": "https://www.3drobolab.com",
	"sort":0,
	"extensionPort": 0,
	"firmware":"1.0",
	"javascriptURL":"js/3DRoboLab.js",
	"blockSpecs": [
		["h","3DRoboLab Programs","runArduino",{"encode":"","setup":"",
			"inc":"\n /* 3D Robotics Laboratory: www.3drobolab.com */ \n","def":"","work":"","loop":""}],
		
		["B", "read digital pin %n","getDigital","8",
		{"encode":"{d0}","setup":"pinMode({0},INPUT);\n","inc":"","def":"","work":"digitalRead({0})","loop":""}],
		
		["B", "Read (PullUp) digital pin D:%n","getTus","8",
		{"encode":"{d0}","setup":"pinMode({0},INPUT);\n","inc":"","def":"","work":"(1-digitalRead({0}))","loop":""}],
		
		["R", "read analog pin A:%n","getAnalog","7",
		{"encode":"{d0}","setup":"pinMode(A0+{0},INPUT);\n","inc":"","def":"","work":"analogRead(A0+{0})","loop":""}],
		
		["R", "Read Temperature pin A:%n","getSicaklik","6",
		{"encode":"{d0}","setup":"pinMode(A0+{0},INPUT);\n","inc":"","def":"","work":"(500.0*analogRead(A0+{0})/1024.0)","loop":""}],
		
		["R", "Read Light pin A:%n","getIsik","5",
		{"encode":"{d0}","setup":"pinMode(A0+{0},INPUT);\n","inc":"","def":"","work":"(100.0-100.0*analogRead(A0+{0})/1024.0)","loop":""}],
		
		["R", "read pulse pin %n timeout %n","getPulse","13",20000,
		{"encode":"{d0}","setup":"pinMode({0},INPUT);\n","inc":"","def":"","work":"pulseIn({0},HIGH,{1})","loop":""}],
		
		["w", "set digital pin %n output as %d.digital","runDigital", "9", "HIGH",
		{"encode":"{d0}{d1}","setup":"pinMode({0},OUTPUT);\n","inc":"","def":"","work":"digitalWrite({0},{1});\n","loop":""}],
		
		["w", "set pwm pin %n output as %d.pwmvalue","runPwm", "10", 0,
		{"encode":"{d0}{d1}","setup":"pinMode({0},OUTPUT);\n","inc":"","def":"","work":"analogWrite({0},{1});\n","loop":""}],
		
		["w", "Set Light pin D:%n output as %d.Ledvalue","runLight", "9", 0,
		{"encode":"{d0}{d1}","setup":"pinMode({0},OUTPUT);\n","inc":"","def":"","work":"analogWrite({0},255*{1}/100);\n","loop":""}],
		
		["w", "Set RGB pin R:%n G:%n B:%n values R:%d.Ledvalue G:%d.Ledvalue B:%d.Ledvalue","runRGB", "9","10","11", 0,0,0,
		{"encode":"{d0}{d1}","setup":"pinMode({0},OUTPUT);\n pinMode({1},OUTPUT);\n pinMode({2},OUTPUT);\n","inc":"","def":"","work":"analogWrite({0},255-255*{3}/100);\n analogWrite({1},255-255*{4}/100);\n analogWrite({2},255-255*{5}/100);\n","loop":""}],
		
		["w", "play tone pin %n on note %d.notes beat %d.beats","runTone", "3", "C4","Half",
		{"encode":"{d0}{s1}{s2}","setup":"pinMode({0},OUTPUT);\n","inc":"","def":"","work":"tone({0},{1},{2}); // write to buzzer\ndelay({2});\n","loop":""}],
		
		["w", "set servo pin %n angle as %d.servovalue","runServoArduino", "5", 90,
		{"encode":"{d0}{d1}","setup":"servo_{0}.attach({0}); // init pin\n","inc":"#include <Servo.h>\n","def":"Servo servo_{0};\n","work":"servo_{0}.write({1}); // write to servo\n","loop":""}],

		["R", "read ultrasonic sensor trig pin %n echo pin %n","getUltrasonicArduino",13,12,
		{"encode":"{d0}","setup":"","inc":"","def":"--separator--float getDistance(int trig,int echo){\npinMode(trig,OUTPUT);\ndigitalWrite(trig,LOW);\ndelayMicroseconds(2);\ndigitalWrite(trig,HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trig,LOW);\npinMode(echo, INPUT);\nreturn pulseIn(echo,HIGH,30000)/58.0;\n}\n","work":"getDistance({0},{1})","loop":""}],
				
		["R", "timer","getTimer", "0",
		{"encode":"{n0}","setup":"","inc":"","def":"double currentTime = 0;\ndouble lastTime = 0;\n--separator--double getLastTime(){\n\treturn currentTime = millis()/1000.0 - lastTime;\n}\n","work":"getLastTime()","loop":""}],
		
		["w", "reset timer","resetTimer", "0",
		{"encode":"{n0}","setup":"","inc":"","def":"double currentTime = 0;\ndouble lastTime = 0;\n","work":"lastTime = millis()/1000.0;\n","loop":""}],
			
		["w", "Set Serial BaudRate:%d.BoudRate", "serialBegin", 57600,
		{"setup":"","inc":"","def":"","work":"Serial.begin({0});\n","loop":""}],
		
		["w", "Write Serial msg: %s", "serialWrite", "Merhaba",
		{"setup":"","inc":"","def":"","work":"Serial.println({0});\n","loop":""}],
		
		["R", "Serial available ?", "serialAvailable",
		{"setup":"","inc":"","def":"","work":"Serial.available()","loop":""}],
		
		["R", "Read Serial (byte)", "serialRead",
		{"setup":"","inc":"","def":"","work":"Serial.read()","loop":""}],
		
		["R", "Read Serial (line)", "serialReadLine",
		{"setup":"","inc":"","def":"","work":"Serial.readStringUntil('!').toInt()","loop":""}],		
				
	],
	"menus": {
		"beats":["500","250","125","1000","2000","0"],
		"servovalue":["0","45","90","135","180"],
		"pwmvalue":["0","50","100","150","255"],
		"Ledvalue":["0","25","50","75","100"],
		"digital":["HIGH","LOW"],
		"notes":["C2","D2","E2","F2","G2","A2","B2","C3","D3","E3","F3","G3","A3","B3","C4","D4","E4","F4","G4","A4","B4","C5","D5","E5","F5","G5","A5","B5","C6","D6","E6","F6","G6","A6","B6","C7","D7","E7","F7","G7","A7","B7","C8","D8"],
		"beats":["Half","Quarter","Eighth","Whole","Double","Zero"],
		"BoudRate":["110","600","2400","9600","57600", "115200"],
		"LCDcode":["0x27","0x3f"],
		"LCDLine":["1","2"], 
		"LCDBlink":["ON","OFF"], 
		"LCDgif":["Nota", "Saat", "Kalp", "Tik", "X", "Giriş"],
		"LCDcol":["2","4","8","16","32","64"]
	},
	"values":{
		"run":2,
		"get":1,
		"digital":30,
		"analog":31,
		"pwm":32,
		"servo_pin":33,
		"tone":34,
		"timer":50,
		"HIGH":1,"LOW":0,
		"B0":31,"C1":33,"D1":37,"E1":41,"F1":44,"G1":49,"A1":55,"B1":62,
			"C2":65,"D2":73,"E2":82,"F2":87,"G2":98,"A2":110,"B2":123,
			"C3":131,"D3":147,"E3":165,"F3":175,"G3":196,"A3":220,"B3":247,
			"C4":262,"D4":294,"E4":330,"F4":349,"G4":392,"A4":440,"B4":494,
			"C5":523,"D5":587,"E5":659,"F5":698,"G5":784,"A5":880,"B5":988,
			"C6":1047,"D6":1175,"E6":1319,"F6":1397,"G6":1568,"A6":1760,"B6":1976,
			"C7":2093,"D7":2349,"E7":2637,"F7":2794,"G7":3136,"A7":3520,"B7":3951,
			"C8":4186,"D8":4699,
		"Half":500,"Quarter":250,"Eighth":125,"Whole":1000,"Double":2000,"Zero":0,
		"Nota":1, "Saat":2, "Kalp":3, "Tik":5, "X":6, "Giriş":7,
		"ON":1,"OFF":0
	},
	"translators":{
		"latin5":{
			"3DRoboLab Programs":"3DRoboLab Program",
			"Read (PullUp) digital pin D:%n":"Sayısal pin D:%n (PullUp) oku",
			"Read Temperature pin A:%n":"Sıcaklık oku pin A:%n",
			"Read Light pin A:%n":"Işık oku pin A:%n",
			"Set Light pin D:%n output as %d.Ledvalue":"Led pin D:%n değerini %d.Ledvalue yap",
			"Set RGB pin R:%n G:%n B:%n values R:%d.Ledvalue G:%d.Ledvalue B:%d.Ledvalue":"RGB Led pin R:%n G:%n B:%n değerini R:%d.Ledvalue G:%d.Ledvalue B:%d.Ledvalue yap",
			"Check IR pin D: %n":"IR veri var mı D: %n",
			"Read IR value":"IR kumanda oku",
			"read analog pin A:%n":"Analog pin A:%n oku",
			"Define Bluetooth from Rx:%n Tx:%n BaudRate:%d.BoudRate":"Bluetooth Tanımla Rx:%n Tx:%n BaudRate:%d.BoudRate ayarla",
			"Set Bluetooth BaudRate:%d.BoudRate":"Bluetooth BaudRate:%d.BoudRate ayarla",
			"Set Serial BaudRate:%d.BoudRate":"Serial BaudRate:%d.BoudRate ayarla",
			"Write Bluetooth msg: %s":"Bluetooth veri yaz %s",
			"Write Serial msg: %s":"Serial veri yaz %s",
			"Bluetooth available ?":"Bluetooth veri var mı ?",
			"Serial available ?":"Serial veri var mı ?",
			"Read Bluetooth (byte)":"Bluetooth byte oku",
			"Read Serial (byte)":"Serial byte oku",
			"Read Bluetooth (line)":"Bluetooth satır oku",
			"Read Serial (line)":"Serial satır oku",
			"SubString variable %n at %n to %n":"Karakter ayır: %n değişkeni  %n den %n e",
			"Hello":"Merhaba",
			"Basic Operations with Arduino":"Arduino ile basit işlemler",
			"/* 3D Robotics Laboratory: www.3drobolab.com */":"/* 3D Robotik Labaratuarı: www.3drobolab.com */",
			
			"LCD Set I2C %d.LCDcode Line: %d.LCDLine Col: %d.LCDcol ":"LCD yi I2C ayarla %d.LCDcode Satır: %d.LCDLine Sütun: %d.LCDcol ",
			"LCD Set Cursor Row:%n Col:%n":"LCD başlangıç Satır:%n Sütun:%n",
			"LCD Print %s":"LCD ye yaz %s",
			"LCD backlight turn %d.LCDBlink":"LCD arkaplan ışığı %d.LCDBlink",
			"LCD Clear":"LCD temizle",
			"blink":"Blink",
					
		}
	
	}
}